services:
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: uber
      POSTGRES_PASSWORD: uberpass
      POSTGRES_DB: uberdb
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U uber -d uberdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - '6379:6379'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: bitnami/zookeeper:3.9
    restart: always
    ports:
      - '2181:2181'
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: bitnami/kafka:3.5
    restart: always
    ports:
      - '9092:9092'
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      ALLOW_PLAINTEXT_LISTENER: yes
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 3

  user-service:
    build: ./user-service
    restart: always
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_USER=uber
      - DB_PASS=uberpass
      - DB_NAME=uberdb
      - DATABASE_URL=postgresql://uber:uberpass@postgres:5432/uberdb
      - REDIS_HOST=redis
      - KAFKA_BROKER=kafka:9092
      - JWT_SECRET=your_jwt_secret_key_here
    ports:
      - '4001:4000'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy

  driver-service:
    build: ./driver-service
    restart: always
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_USER=uber
      - DB_PASS=uberpass
      - DB_NAME=uberdb
      - DATABASE_URL=postgresql://uber:uberpass@postgres:5432/uberdb
      - REDIS_HOST=redis
      - KAFKA_BROKER=kafka:9092
      - JWT_SECRET=your_jwt_secret_key_here
    ports:
      - '4002:4000'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy

  booking-service:
    build: ./booking-service
    restart: always
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_USER=uber
      - DB_PASS=uberpass
      - DB_NAME=uberdb
      - DATABASE_URL=postgresql://uber:uberpass@postgres:5432/uberdb
      - REDIS_HOST=redis
      - KAFKA_BROKER=kafka:9092
      - JWT_SECRET=your_jwt_secret_key_here
    ports:
      - '4003:4000'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy

  payment-service:
    build: ./payment-service
    restart: always
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_USER=uber
      - DB_PASS=uberpass
      - DB_NAME=uberdb
      - DATABASE_URL=postgresql://uber:uberpass@postgres:5432/uberdb
      - REDIS_HOST=redis
      - KAFKA_BROKER=kafka:9092
      - JWT_SECRET=your_jwt_secret_key_here
      - RAZORPAY_KEY_ID=your_razorpay_key_id
      - RAZORPAY_KEY_SECRET=your_razorpay_key_secret
    ports:
      - '4004:4000'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy

  notification-service:
    build: ./notification-service
    restart: always
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_USER=uber
      - DB_PASS=uberpass
      - DB_NAME=uberdb
      - DATABASE_URL=postgresql://uber:uberpass@postgres:5432/uberdb
      - REDIS_HOST=redis
      - KAFKA_BROKER=kafka:9092
      - JWT_SECRET=your_jwt_secret_key_here
    ports:
      - '4005:4000'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy

  api-gateway:
    build: ./api-gateway
    restart: always
    environment:
      - NODE_ENV=development
      - USER_SERVICE_URL=http://user-service:4000
      - DRIVER_SERVICE_URL=http://driver-service:4000
      - BOOKING_SERVICE_URL=http://booking-service:4000
      - PAYMENT_SERVICE_URL=http://payment-service:4000
      - NOTIFICATION_SERVICE_URL=http://notification-service:4000
    ports:
      - '8080:8080'
    depends_on:
      - user-service
      - driver-service
      - booking-service
      - payment-service
      - notification-service 