services:
  postgres:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: uber
      POSTGRES_PASSWORD: uberpass
      POSTGRES_DB: uberdb
    ports:
      - '5432:5432'

  redis:
    image: redis:7
    restart: always
    ports:
      - '6379:6379'

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    restart: always
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    restart: always
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  user-service:
    build: ./user-service
    restart: always
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_USER=uber
      - DB_PASS=uberpass
      - DB_NAME=uberdb
      - DATABASE_URL=postgresql://uber:uberpass@postgres:5432/uberdb
      - REDIS_HOST=redis
      - KAFKA_BROKER=kafka:9092
      - JWT_SECRET=your_jwt_secret_key_here
    ports:
      - '4001:4000'
    depends_on:
      - postgres
      - redis
      - kafka

  driver-service:
    build: ./driver-service
    restart: always
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_USER=uber
      - DB_PASS=uberpass
      - DB_NAME=uberdb
      - DATABASE_URL=postgresql://uber:uberpass@postgres:5432/uberdb
      - REDIS_HOST=redis
      - KAFKA_BROKER=kafka:9092
      - JWT_SECRET=your_jwt_secret_key_here
    ports:
      - '4002:4000'
    depends_on:
      - postgres
      - redis
      - kafka

  booking-service:
    build: ./booking-service
    restart: always
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_USER=uber
      - DB_PASS=uberpass
      - DB_NAME=uberdb
      - DATABASE_URL=postgresql://uber:uberpass@postgres:5432/uberdb
      - REDIS_HOST=redis
      - KAFKA_BROKER=kafka:9092
      - JWT_SECRET=your_jwt_secret_key_here
    ports:
      - '4003:4000'
    depends_on:
      - postgres
      - redis
      - kafka

  payment-service:
    build: ./payment-service
    restart: always
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_USER=uber
      - DB_PASS=uberpass
      - DB_NAME=uberdb
      - DATABASE_URL=postgresql://uber:uberpass@postgres:5432/uberdb
      - REDIS_HOST=redis
      - KAFKA_BROKER=kafka:9092
      - JWT_SECRET=your_jwt_secret_key_here
      - RAZORPAY_KEY_ID=your_razorpay_key_id
      - RAZORPAY_KEY_SECRET=your_razorpay_key_secret
    ports:
      - '4004:4000'
    depends_on:
      - postgres
      - redis
      - kafka

  notification-service:
    build: ./notification-service
    restart: always
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_USER=uber
      - DB_PASS=uberpass
      - DB_NAME=uberdb
      - DATABASE_URL=postgresql://uber:uberpass@postgres:5432/uberdb
      - REDIS_HOST=redis
      - KAFKA_BROKER=kafka:9092
      - JWT_SECRET=your_jwt_secret_key_here
    ports:
      - '4005:4000'
    depends_on:
      - postgres
      - redis
      - kafka

  api-gateway:
    build: ./api-gateway
    restart: always
    environment:
      - NODE_ENV=development
      - USER_SERVICE_URL=http://user-service:4000
      - DRIVER_SERVICE_URL=http://driver-service:4000
      - BOOKING_SERVICE_URL=http://booking-service:4000
      - PAYMENT_SERVICE_URL=http://payment-service:4000
      - NOTIFICATION_SERVICE_URL=http://notification-service:4000
    ports:
      - '8080:8080'
    depends_on:
      - user-service
      - driver-service
      - booking-service
      - payment-service
      - notification-service 