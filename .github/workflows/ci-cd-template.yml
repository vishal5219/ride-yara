name: CI/CD Pipeline

on:
  push:
    branches: [main]
    paths:
      - 'user-service/**'
      - '.github/workflows/ci-cd-template.yml'

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: user-service
      REGISTRY: ghcr.io/${{ github.repository }}
      KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd user-service
          npm ci

      - name: Run tests
        run: |
          cd user-service
          npm test

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          cd user-service
          docker build -t $REGISTRY/$IMAGE_NAME:latest .
          echo ${{ env.DOCKERHUB_TOKEN }} | docker login ghcr.io -u ${{ env.DOCKERHUB_USERNAME }} --password-stdin
          docker push $REGISTRY/$IMAGE_NAME:latest

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Deploy to Kubernetes
        run: |
          echo "$KUBE_CONFIG_DATA" | base64 -d > $HOME/.kube/config
          kubectl set image deployment/$IMAGE_NAME $IMAGE_NAME=$REGISTRY/$IMAGE_NAME:latest --record
          kubectl rollout status deployment/$IMAGE_NAME 